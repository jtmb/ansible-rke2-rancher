---
# Rancher tasks

- name: Check if kubectl can reach the cluster before proceeding
  shell: |
    export KUBECONFIG={{ kubectl_config }}
    {{kubectl_binary}} get nodes
  register: kubectl_status
  failed_when: kubectl_status.rc != 0
  changed_when: false
  retries: 10
  delay: 5
  until: kubectl_status.rc == 0
  tags: rancher

- name: Add Rancher Helm repository
  kubernetes.core.helm_repository:
    name: rancher-stable
    repo_url: https://releases.rancher.com/server-charts/stable
    state: present  # Ensure the repository is added
  environment:
    KUBECONFIG: "{{ kubectl_config }}"  # Use the kubectl config environment variable
  tags: rancher

- name: Create Rancher namespace
  kubernetes.core.k8s:
    name: cattle-system
    api_version: v1
    kind: Namespace
    state: present  # Ensure the namespace exists
  environment:
    KUBECONFIG: "{{ kubectl_config }}"  # Use the kubectl config environment variable
  tags: rancher

- name: Update the repository cache
  kubernetes.core.helm:
    name: dummy
    namespace: kube-system
    state: absent
    update_repo_cache: true  # Update the Helm repo cache
  environment:
    KUBECONFIG: "{{ kubectl_config }}"  # Use the kubectl config environment variable
  tags: rancher

- name: Deploy Rancher chart inside cattle-system namespace
  kubernetes.core.helm:
    name: rancher
    chart_ref: "{{ rancher_chart_ref }}"
    chart_version: "{{ rancher_chart_version }}"
    release_namespace: cattle-system
    create_namespace: true
    update_repo_cache: true
    state: present
    wait: true
    values:
      hostname: "{{ hostname }}"
      bootstrapPassword: "{{ bootstrap_password }}"
      ingress:
        tls:
          source: "letsEncrypt"
      letsEncrypt:
        email: "{{ cert_manager_email }}"
        ingress:
          class: "nginx"
  environment:
    KUBECONFIG: "{{ kubectl_config }}"  # Use the kubectl config environment variable
  when: self_signed_cert == false
  register: result
  retries: 10
  delay: 30  # Wait 30 seconds before retrying
  until: result is succeeded
  tags: rancher

- name: Deploy Rancher chart inside cattle-system namespace
  kubernetes.core.helm:
    name: rancher
    chart_ref: "{{ rancher_chart_ref }}"
    chart_version: "{{ rancher_chart_version }}"
    release_namespace: cattle-system
    create_namespace: true
    update_repo_cache: true
    state: present
    wait: true
    values:
      hostname: "{{ hostname }}"
      bootstrapPassword: "{{ bootstrap_password }}"
      ingress:
        tls:
          source: "none"
  environment:
    KUBECONFIG: "{{ kubectl_config }}"  # Use the kubectl config environment variable
  when: self_signed_cert == true
  register: result
  retries: 10
  delay: 30  # Wait 30 seconds before retrying
  until: result is succeeded
  tags: rancher

- name: Set agent-tls-mode to system-store
  shell: |
    export KUBECONFIG={{ kubectl_config }}
    {{kubectl_binary}} patch settings.management.cattle.io agent-tls-mode --type='merge' -p '{"value":"system-store"}'
  tags: [roles]
  when: "'rke2_server_agents' in group_names"
  register: result
  retries: 10
  delay: 5
  until: result.rc == 0
  tags: rancher